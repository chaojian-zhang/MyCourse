<Window x:Class="MyCourse.Windows.StatusPromt"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyCourse.Windows"
        mc:Ignorable="d" Closing="Window_Closing" KeyDown="Window_KeyDown" MouseDown="Window_MouseDown"
        Title="StatusPromt" MinHeight="100" Width="350" Background="#FFF7F7F7" SizeToContent="Height">
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource DialogWindow}">
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.Setters>
                        <Setter Property="BorderBrush" Value="Goldenrod"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <!-- A shiny goden style button-->
        <SolidColorBrush x:Key="ShinyButtonFrame" Color="#BFF1CB77"/>
        <SolidColorBrush x:Key="ReflectionButtonSurface" Color="#595E9CD1"/>
        <SolidColorBrush x:Key="BrightButtonText" Color="Gold"/>
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource ResourceKey=BrightButtonText}"/>
            <Setter Property="Background" Value="{StaticResource ResourceKey=ReflectionButtonSurface}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=ShinyButtonFrame}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <!-- Status Row -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image x:Name="StatusIcon" Grid.Column="0"/>
            <Label x:Name="StatusLabel" Grid.Column="1" Content="Event" FontSize="22" Foreground="Gold" FontWeight="Bold"/>

            <!-- Content: Error, Event, Welcome -->
        </Grid>
        <!-- Seperator Row -->
        <Separator Grid.Row="1" Width="340" Foreground="{x:Null}" Background="#55FFC229"/>
        <!-- Content Row -->
        <WrapPanel Grid.Row="2">
            <TextBlock x:Name="StatusTextBlock" Margin="10" TextWrapping="WrapWithOverflow" FontSize="12" Foreground="Goldenrod" FontWeight="Bold"/>
        </WrapPanel>
        <!-- Auxiliary Row: buttons etc. -->
        <DockPanel Grid.Row="3" LastChildFill="False">
            <Button x:Name="LeftButton" DockPanel.Dock="Left" VerticalAlignment="Center" Visibility="Hidden" Click="LeftButton_Click"/>
            <Button x:Name="RightButton" DockPanel.Dock="Right" VerticalAlignment="Center" Visibility="Hidden" Click="RightButton_Click"/>
        </DockPanel>
        <Grid Grid.Row="3">
            <Button x:Name="CenterButton" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Test" Visibility="Visible" Click="CenterButton_Click"/>
        </Grid>
    </Grid>
</Window>
